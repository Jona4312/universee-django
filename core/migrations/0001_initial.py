# Generated by Django 5.2.7 on 2025-10-08 19:34

import core.models
import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=80, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=90, unique=True)),
            ],
            options={
                'verbose_name': 'Área',
                'verbose_name_plural': 'Áreas',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Carrera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=110)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carreras', to='core.area')),
            ],
            options={
                'ordering': ['nombre'],
                'unique_together': {('area', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Ramo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=120)),
                ('codigo', models.CharField(blank=True, max_length=20)),
                ('slug', models.SlugField(blank=True, max_length=130)),
                ('carrera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ramos', to='core.carrera')),
            ],
            options={
                'ordering': ['nombre'],
                'unique_together': {('carrera', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Recurso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=160)),
                ('slug', models.SlugField(blank=True, max_length=180)),
                ('descripcion', models.TextField(blank=True)),
                ('archivo', models.FileField(upload_to=core.models.resource_upload_to)),
                ('portada', models.ImageField(blank=True, null=True, upload_to='covers/')),
                ('tipo', models.CharField(choices=[('apunte', 'Apunte/Resumen'), ('guia', 'Guía/Ejercicios'), ('prueba', 'Prueba/Examen'), ('otros', 'Otros')], default='apunte', max_length=12)),
                ('formato', models.CharField(choices=[('pdf', 'PDF'), ('ppt', 'PPT/PPTX'), ('doc', 'DOC/DOCX'), ('zip', 'ZIP'), ('img', 'Imagen'), ('otro', 'Otro')], default='pdf', max_length=10)),
                ('anio', models.PositiveIntegerField(blank=True, null=True)),
                ('semestre', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2')], null=True)),
                ('dificultad', models.IntegerField(blank=True, null=True)),
                ('vistas', models.PositiveIntegerField(default=0)),
                ('descargas', models.PositiveIntegerField(default=0)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('publicado', models.BooleanField(default=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('autor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('ramo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recursos', to='core.ramo')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['-creado_en'],
            },
        ),
    ]
